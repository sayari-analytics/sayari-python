# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .trade_traversal_path_segment import TradeTraversalPathSegment
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class TradeTraversalPath(UniversalBaseModel):
    source_entity_id: str = pydantic.Field()
    """
    Root entity ID
    """

    path: typing.List[TradeTraversalPathSegment] = pydantic.Field()
    """
    Upstream paths beginning with the T1-T2 edge
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
