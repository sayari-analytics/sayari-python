# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .string_or_number import StringOrNumber
from ...shared_types.types.risk_level import RiskLevel
import typing
from .project_risk_category import ProjectRiskCategory
from .project_entity_risk_summary_network_path import ProjectEntityRiskSummaryNetworkPath
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ProjectEntityRiskSummaryRiskFactor(UniversalBaseModel):
    id: str
    label: str
    value: StringOrNumber
    level: RiskLevel
    risk_categories: typing.List[ProjectRiskCategory]
    source_entity_ids: typing.List[str]
    network_paths: typing.List[typing.List[ProjectEntityRiskSummaryNetworkPath]]
    metadata: typing.List[typing.Dict[str, typing.List[StringOrNumber]]]
    risk_intelligence: typing.List[typing.Dict[str, StringOrNumber]]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
