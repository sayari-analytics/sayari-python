# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .string_or_number import StringOrNumber
from ...generated_types.types.country import Country
from ...generated_types.types.entities import Entities
from .resolution_profile import ResolutionProfile
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CreateResolvedProjectEntityRequest(UniversalBaseModel):
    """
    Examples
    --------
    from sayari.project_entity import CreateResolvedProjectEntityRequest

    CreateResolvedProjectEntityRequest(
        name=["VTB Bank"],
        country=["RUS"],
        address=["Moscow"],
        identifier=["253400V1H6ART1UQ0N98"],
        profile="corporate",
    )
    """

    identifier: typing.Optional[typing.List[StringOrNumber]] = None
    name: typing.Optional[typing.List[str]] = None
    country: typing.Optional[typing.List[Country]] = None
    address: typing.Optional[typing.List[str]] = None
    date_of_birth: typing.Optional[typing.List[str]] = None
    contact: typing.Optional[typing.List[StringOrNumber]] = None
    type: typing.Optional[typing.List[Entities]] = None
    city: typing.Optional[typing.List[str]] = None
    state: typing.Optional[typing.List[str]] = None
    profile: typing.Optional[ResolutionProfile] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
