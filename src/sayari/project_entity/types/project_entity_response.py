# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .match_strength_enum import MatchStrengthEnum
from .attribute_values import AttributeValues
from .product_mapping import ProductMapping
from .project_entity_match_response import ProjectEntityMatchResponse
from .tag_response import TagResponse
from .case_status import CaseStatus
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ProjectEntityResponse(UniversalBaseModel):
    project_entity_id: str
    project_id: str
    label: str
    upload_ids: typing.List[str]
    strength: MatchStrengthEnum
    created_at: str
    attributes: typing.Dict[str, AttributeValues]
    product_mapping: typing.Optional[ProductMapping] = None
    matches: typing.List[ProjectEntityMatchResponse]
    tags: typing.List[TagResponse]
    case: typing.Optional[CaseStatus] = None
    updated_at: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
