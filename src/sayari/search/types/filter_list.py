# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .source_id import SourceId
from ...generated_types.types.country import Country
from ...generated_types.types.entities import Entities
from ...generated_types.types.risk import Risk
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class FilterList(UniversalBaseModel):
    """
    Filter your search on the following attributes.
    """

    source: typing.Optional[typing.List[SourceId]] = None
    country: typing.Optional[typing.List[Country]] = None
    state: typing.Optional[typing.List[str]] = None
    city: typing.Optional[typing.List[str]] = None
    entity_type: typing.Optional[typing.List[Entities]] = None
    bounds: typing.Optional[typing.List[str]] = None
    risk: typing.Optional[typing.List[Risk]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
