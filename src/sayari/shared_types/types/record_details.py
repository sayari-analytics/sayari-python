# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...generated_types.types.country import Country


class RecordDetails(pydantic_v1.BaseModel):
    id: str = pydantic_v1.Field()
    """
    The unique identifier for a record in the database
    """

    label: str
    source: str = pydantic_v1.Field()
    """
    The unique identifier for a source in the database
    """

    publication_date: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The date the record was published
    """

    acquisition_date: str = pydantic_v1.Field()
    """
    The date Sayari acquired this record
    """

    references_count: int = pydantic_v1.Field()
    """
    Number of times this record is referenced
    """

    record_url: str = pydantic_v1.Field()
    """
    The url to download the record from Sayari
    """

    source_url: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The url to access to original source
    """

    document_urls: typing.Optional[typing.List[str]] = None
    matches: typing.Optional[typing.Dict[str, typing.List[str]]] = None
    country: typing.Optional[Country] = None
    page: typing.Optional[float] = None
    page_count: typing.Optional[float] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
