# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...generated_types.types.attributes import Attributes
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RelationshipInfo(UniversalBaseModel):
    editable: typing.Optional[bool] = None
    record: str
    attributes: typing.Dict[Attributes, typing.List[typing.Optional[typing.Any]]]
    date: typing.Optional[str] = None
    from_date: typing.Optional[str] = None
    to_date: typing.Optional[str] = None
    acquisition_date: str
    former: typing.Optional[bool] = None
    publication_date: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
