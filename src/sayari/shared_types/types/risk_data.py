# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .risk_value import RiskValue
import typing
from .risk_level import RiskLevel
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class RiskData(UniversalBaseModel):
    value: RiskValue
    metadata: typing.Dict[str, typing.Optional[typing.Any]]
    level: RiskLevel = pydantic.Field()
    """
    The severity of the risk.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
