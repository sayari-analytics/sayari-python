# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .monetary_value_context import MonetaryValueContext
import pydantic
import typing
from .currency import Currency
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class MonetaryValueProperties(UniversalBaseModel):
    context: MonetaryValueContext = pydantic.Field()
    """
    The type of value
    """

    currency: typing.Optional[Currency] = pydantic.Field(default=None)
    """
    The ISO 4217 currency code
    """

    date: typing.Optional[str] = pydantic.Field(default=None)
    """
    as-of date
    """

    from_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    start date
    """

    to_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    end date
    """

    value: float = pydantic.Field()
    """
    The financial value of the asset
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
