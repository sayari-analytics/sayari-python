# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .status_context import StatusContext
import pydantic
from .company_status import CompanyStatus
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class StatusProperties(UniversalBaseModel):
    context: typing.Optional[StatusContext] = pydantic.Field(default=None)
    """
    The type of status, such as license or partnership type
    """

    date: typing.Optional[str] = pydantic.Field(default=None)
    """
    as-of date
    """

    from_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    start date
    """

    text: typing.Optional[str] = pydantic.Field(default=None)
    """
    The raw status text
    """

    to_date: typing.Optional[str] = pydantic.Field(default=None)
    """
    end date
    """

    value: typing.Optional[CompanyStatus] = pydantic.Field(default=None)
    """
    The status, normalized to one of the status enums
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
