# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class UsageInfo(UniversalBaseModel):
    entity: typing.Optional[int] = None
    entity_summary: typing.Optional[int] = None
    record: typing.Optional[int] = None
    resolve: typing.Optional[int] = None
    search_entities: typing.Optional[int] = None
    search_records: typing.Optional[int] = None
    search_trade: typing.Optional[int] = None
    traversal: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
