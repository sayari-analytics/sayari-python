# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from ...shared_types.types.core_entity import CoreEntity
from .project_entity_upstream import ProjectEntityUpstream
from .psa_summary import PsaSummary

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ProjectEntity(pydantic.BaseModel):
    id: str
    project: str
    label: str = pydantic.Field(description="Entity label (display name).")
    created: str
    updated: str
    updated_by: str
    version: int = pydantic.Field(description="Will be 0.")
    type: typing.Literal["entity"]
    resource_id: str = pydantic.Field(description="Entity ID.")
    tag_ids: typing.List[str]
    case_status: str
    match_strength: typing.Any
    shipped_hs_codes: typing.List[str] = pydantic.Field(description="HS codes shipped by the entity.")
    received_hs_codes: typing.List[str] = pydantic.Field(description="HS codes received by the entity.")
    upstream: ProjectEntityUpstream
    summary: CoreEntity
    psa: typing.Optional[PsaSummary] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
