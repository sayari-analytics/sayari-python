# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .project import Project

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CreateProjectResponse(pydantic.BaseModel):
    """
    from sayari-analytics import CreateProjectResponse, Project, ProjectCounts

    CreateProjectResponse(data=Project(id="YVMBRg", label="Project Alpha", archived=False, created="2024-03-15 20:31:06.08855+00", updated="2024-03-15 20:31:06.08855+00", counts=ProjectCounts(entity=0, graph=0, record=0, search=0, ), ), )
    """

    data: Project

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
