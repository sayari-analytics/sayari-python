# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class FinanceType(str, enum.Enum):
    SHARE_PERCENTAGE = "share_percentage"
    SHARE_AMOUNT = "share_amount"
    REGISTERED_CAPITAL = "registered_capital"
    PAID_UP_CAPITAL = "paid_up_capital"
    AUTHORIZED_CAPITAL = "authorized_capital"
    SUBSCRIBED_CAPITAL = "subscribed_capital"

    def visit(
        self,
        share_percentage: typing.Callable[[], T_Result],
        share_amount: typing.Callable[[], T_Result],
        registered_capital: typing.Callable[[], T_Result],
        paid_up_capital: typing.Callable[[], T_Result],
        authorized_capital: typing.Callable[[], T_Result],
        subscribed_capital: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is FinanceType.SHARE_PERCENTAGE:
            return share_percentage()
        if self is FinanceType.SHARE_AMOUNT:
            return share_amount()
        if self is FinanceType.REGISTERED_CAPITAL:
            return registered_capital()
        if self is FinanceType.PAID_UP_CAPITAL:
            return paid_up_capital()
        if self is FinanceType.AUTHORIZED_CAPITAL:
            return authorized_capital()
        if self is FinanceType.SUBSCRIBED_CAPITAL:
            return subscribed_capital()
