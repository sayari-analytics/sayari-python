# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class LanguageEnum(str, enum.Enum):
    AA = "aa"
    AB = "ab"
    AF = "af"
    AK = "ak"
    SQ = "sq"
    AM = "am"
    AR = "ar"
    AN = "an"
    HY = "hy"
    AS = "as"
    AV = "av"
    AE = "ae"
    AY = "ay"
    AZ = "az"
    BA = "ba"
    BM = "bm"
    EU = "eu"
    BE = "be"
    BN = "bn"
    BH = "bh"
    BI = "bi"
    BS = "bs"
    BR = "br"
    BG = "bg"
    MY = "my"
    CA = "ca"
    CH = "ch"
    CE = "ce"
    ZH = "zh"
    CU = "cu"
    CV = "cv"
    KW = "kw"
    CO = "co"
    CR = "cr"
    CS = "cs"
    DA = "da"
    DV = "dv"
    NL = "nl"
    DZ = "dz"
    EN = "en"
    EO = "eo"
    ET = "et"
    EE = "ee"
    FO = "fo"
    FJ = "fj"
    FI = "fi"
    FR = "fr"
    FY = "fy"
    FF = "ff"
    KA = "ka"
    DE = "de"
    GD = "gd"
    GA = "ga"
    GL = "gl"
    GV = "gv"
    EL = "el"
    GN = "gn"
    GU = "gu"
    HT = "ht"
    HA = "ha"
    HE = "he"
    HZ = "hz"
    HI = "hi"
    HO = "ho"
    HR = "hr"
    HU = "hu"
    IG = "ig"
    IS = "is"
    IO = "io"
    II = "ii"
    IU = "iu"
    IE = "ie"
    IA = "ia"
    ID = "id"
    IK = "ik"
    IT = "it"
    JV = "jv"
    JA = "ja"
    KL = "kl"
    KN = "kn"
    KS = "ks"
    KR = "kr"
    KK = "kk"
    KM = "km"
    KI = "ki"
    RW = "rw"
    KY = "ky"
    KV = "kv"
    KG = "kg"
    KO = "ko"
    KJ = "kj"
    KU = "ku"
    LO = "lo"
    LA = "la"
    LV = "lv"
    LI = "li"
    LN = "ln"
    LT = "lt"
    LB = "lb"
    LU = "lu"
    LG = "lg"
    MK = "mk"
    MH = "mh"
    ML = "ml"
    MI = "mi"
    MR = "mr"
    MS = "ms"
    MG = "mg"
    MT = "mt"
    MN = "mn"
    NA = "na"
    NV = "nv"
    NR = "nr"
    ND = "nd"
    NG = "ng"
    NE = "ne"
    NN = "nn"
    NB = "nb"
    NO = "no"
    NY = "ny"
    OC = "oc"
    OJ = "oj"
    OR = "or"
    OM = "om"
    OS = "os"
    PA = "pa"
    FA = "fa"
    PI = "pi"
    PL = "pl"
    PT = "pt"
    PS = "ps"
    QU = "qu"
    RM = "rm"
    RO = "ro"
    RN = "rn"
    RU = "ru"
    SG = "sg"
    SA = "sa"
    SI = "si"
    SK = "sk"
    SL = "sl"
    SE = "se"
    SM = "sm"
    SN = "sn"
    SD = "sd"
    SO = "so"
    ST = "st"
    ES = "es"
    SC = "sc"
    SR = "sr"
    SS = "ss"
    SU = "su"
    SW = "sw"
    SV = "sv"
    TY = "ty"
    TA = "ta"
    TT = "tt"
    TE = "te"
    TG = "tg"
    TL = "tl"
    TH = "th"
    BO = "bo"
    TI = "ti"
    TO = "to"
    TN = "tn"
    TS = "ts"
    TK = "tk"
    TR = "tr"
    TW = "tw"
    UG = "ug"
    UK = "uk"
    UR = "ur"
    UZ = "uz"
    VE = "ve"
    VI = "vi"
    VO = "vo"
    CY = "cy"
    WA = "wa"
    WO = "wo"
    XH = "xh"
    YI = "yi"
    YO = "yo"
    ZA = "za"
    ZU = "zu"

    def visit(
        self,
        aa: typing.Callable[[], T_Result],
        ab: typing.Callable[[], T_Result],
        af: typing.Callable[[], T_Result],
        ak: typing.Callable[[], T_Result],
        sq: typing.Callable[[], T_Result],
        am: typing.Callable[[], T_Result],
        ar: typing.Callable[[], T_Result],
        an: typing.Callable[[], T_Result],
        hy: typing.Callable[[], T_Result],
        as_: typing.Callable[[], T_Result],
        av: typing.Callable[[], T_Result],
        ae: typing.Callable[[], T_Result],
        ay: typing.Callable[[], T_Result],
        az: typing.Callable[[], T_Result],
        ba: typing.Callable[[], T_Result],
        bm: typing.Callable[[], T_Result],
        eu: typing.Callable[[], T_Result],
        be: typing.Callable[[], T_Result],
        bn: typing.Callable[[], T_Result],
        bh: typing.Callable[[], T_Result],
        bi: typing.Callable[[], T_Result],
        bs: typing.Callable[[], T_Result],
        br: typing.Callable[[], T_Result],
        bg: typing.Callable[[], T_Result],
        my: typing.Callable[[], T_Result],
        ca: typing.Callable[[], T_Result],
        ch: typing.Callable[[], T_Result],
        ce: typing.Callable[[], T_Result],
        zh: typing.Callable[[], T_Result],
        cu: typing.Callable[[], T_Result],
        cv: typing.Callable[[], T_Result],
        kw: typing.Callable[[], T_Result],
        co: typing.Callable[[], T_Result],
        cr: typing.Callable[[], T_Result],
        cs: typing.Callable[[], T_Result],
        da: typing.Callable[[], T_Result],
        dv: typing.Callable[[], T_Result],
        nl: typing.Callable[[], T_Result],
        dz: typing.Callable[[], T_Result],
        en: typing.Callable[[], T_Result],
        eo: typing.Callable[[], T_Result],
        et: typing.Callable[[], T_Result],
        ee: typing.Callable[[], T_Result],
        fo: typing.Callable[[], T_Result],
        fj: typing.Callable[[], T_Result],
        fi: typing.Callable[[], T_Result],
        fr: typing.Callable[[], T_Result],
        fy: typing.Callable[[], T_Result],
        ff: typing.Callable[[], T_Result],
        ka: typing.Callable[[], T_Result],
        de: typing.Callable[[], T_Result],
        gd: typing.Callable[[], T_Result],
        ga: typing.Callable[[], T_Result],
        gl: typing.Callable[[], T_Result],
        gv: typing.Callable[[], T_Result],
        el: typing.Callable[[], T_Result],
        gn: typing.Callable[[], T_Result],
        gu: typing.Callable[[], T_Result],
        ht: typing.Callable[[], T_Result],
        ha: typing.Callable[[], T_Result],
        he: typing.Callable[[], T_Result],
        hz: typing.Callable[[], T_Result],
        hi: typing.Callable[[], T_Result],
        ho: typing.Callable[[], T_Result],
        hr: typing.Callable[[], T_Result],
        hu: typing.Callable[[], T_Result],
        ig: typing.Callable[[], T_Result],
        is_: typing.Callable[[], T_Result],
        io: typing.Callable[[], T_Result],
        ii: typing.Callable[[], T_Result],
        iu: typing.Callable[[], T_Result],
        ie: typing.Callable[[], T_Result],
        ia: typing.Callable[[], T_Result],
        id: typing.Callable[[], T_Result],
        ik: typing.Callable[[], T_Result],
        it: typing.Callable[[], T_Result],
        jv: typing.Callable[[], T_Result],
        ja: typing.Callable[[], T_Result],
        kl: typing.Callable[[], T_Result],
        kn: typing.Callable[[], T_Result],
        ks: typing.Callable[[], T_Result],
        kr: typing.Callable[[], T_Result],
        kk: typing.Callable[[], T_Result],
        km: typing.Callable[[], T_Result],
        ki: typing.Callable[[], T_Result],
        rw: typing.Callable[[], T_Result],
        ky: typing.Callable[[], T_Result],
        kv: typing.Callable[[], T_Result],
        kg: typing.Callable[[], T_Result],
        ko: typing.Callable[[], T_Result],
        kj: typing.Callable[[], T_Result],
        ku: typing.Callable[[], T_Result],
        lo: typing.Callable[[], T_Result],
        la: typing.Callable[[], T_Result],
        lv: typing.Callable[[], T_Result],
        li: typing.Callable[[], T_Result],
        ln: typing.Callable[[], T_Result],
        lt: typing.Callable[[], T_Result],
        lb: typing.Callable[[], T_Result],
        lu: typing.Callable[[], T_Result],
        lg: typing.Callable[[], T_Result],
        mk: typing.Callable[[], T_Result],
        mh: typing.Callable[[], T_Result],
        ml: typing.Callable[[], T_Result],
        mi: typing.Callable[[], T_Result],
        mr: typing.Callable[[], T_Result],
        ms: typing.Callable[[], T_Result],
        mg: typing.Callable[[], T_Result],
        mt: typing.Callable[[], T_Result],
        mn: typing.Callable[[], T_Result],
        na: typing.Callable[[], T_Result],
        nv: typing.Callable[[], T_Result],
        nr: typing.Callable[[], T_Result],
        nd: typing.Callable[[], T_Result],
        ng: typing.Callable[[], T_Result],
        ne: typing.Callable[[], T_Result],
        nn: typing.Callable[[], T_Result],
        nb: typing.Callable[[], T_Result],
        no: typing.Callable[[], T_Result],
        ny: typing.Callable[[], T_Result],
        oc: typing.Callable[[], T_Result],
        oj: typing.Callable[[], T_Result],
        or_: typing.Callable[[], T_Result],
        om: typing.Callable[[], T_Result],
        os: typing.Callable[[], T_Result],
        pa: typing.Callable[[], T_Result],
        fa: typing.Callable[[], T_Result],
        pi: typing.Callable[[], T_Result],
        pl: typing.Callable[[], T_Result],
        pt: typing.Callable[[], T_Result],
        ps: typing.Callable[[], T_Result],
        qu: typing.Callable[[], T_Result],
        rm: typing.Callable[[], T_Result],
        ro: typing.Callable[[], T_Result],
        rn: typing.Callable[[], T_Result],
        ru: typing.Callable[[], T_Result],
        sg: typing.Callable[[], T_Result],
        sa: typing.Callable[[], T_Result],
        si: typing.Callable[[], T_Result],
        sk: typing.Callable[[], T_Result],
        sl: typing.Callable[[], T_Result],
        se: typing.Callable[[], T_Result],
        sm: typing.Callable[[], T_Result],
        sn: typing.Callable[[], T_Result],
        sd: typing.Callable[[], T_Result],
        so: typing.Callable[[], T_Result],
        st: typing.Callable[[], T_Result],
        es: typing.Callable[[], T_Result],
        sc: typing.Callable[[], T_Result],
        sr: typing.Callable[[], T_Result],
        ss: typing.Callable[[], T_Result],
        su: typing.Callable[[], T_Result],
        sw: typing.Callable[[], T_Result],
        sv: typing.Callable[[], T_Result],
        ty: typing.Callable[[], T_Result],
        ta: typing.Callable[[], T_Result],
        tt: typing.Callable[[], T_Result],
        te: typing.Callable[[], T_Result],
        tg: typing.Callable[[], T_Result],
        tl: typing.Callable[[], T_Result],
        th: typing.Callable[[], T_Result],
        bo: typing.Callable[[], T_Result],
        ti: typing.Callable[[], T_Result],
        to: typing.Callable[[], T_Result],
        tn: typing.Callable[[], T_Result],
        ts: typing.Callable[[], T_Result],
        tk: typing.Callable[[], T_Result],
        tr: typing.Callable[[], T_Result],
        tw: typing.Callable[[], T_Result],
        ug: typing.Callable[[], T_Result],
        uk: typing.Callable[[], T_Result],
        ur: typing.Callable[[], T_Result],
        uz: typing.Callable[[], T_Result],
        ve: typing.Callable[[], T_Result],
        vi: typing.Callable[[], T_Result],
        vo: typing.Callable[[], T_Result],
        cy: typing.Callable[[], T_Result],
        wa: typing.Callable[[], T_Result],
        wo: typing.Callable[[], T_Result],
        xh: typing.Callable[[], T_Result],
        yi: typing.Callable[[], T_Result],
        yo: typing.Callable[[], T_Result],
        za: typing.Callable[[], T_Result],
        zu: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is LanguageEnum.AA:
            return aa()
        if self is LanguageEnum.AB:
            return ab()
        if self is LanguageEnum.AF:
            return af()
        if self is LanguageEnum.AK:
            return ak()
        if self is LanguageEnum.SQ:
            return sq()
        if self is LanguageEnum.AM:
            return am()
        if self is LanguageEnum.AR:
            return ar()
        if self is LanguageEnum.AN:
            return an()
        if self is LanguageEnum.HY:
            return hy()
        if self is LanguageEnum.AS:
            return as_()
        if self is LanguageEnum.AV:
            return av()
        if self is LanguageEnum.AE:
            return ae()
        if self is LanguageEnum.AY:
            return ay()
        if self is LanguageEnum.AZ:
            return az()
        if self is LanguageEnum.BA:
            return ba()
        if self is LanguageEnum.BM:
            return bm()
        if self is LanguageEnum.EU:
            return eu()
        if self is LanguageEnum.BE:
            return be()
        if self is LanguageEnum.BN:
            return bn()
        if self is LanguageEnum.BH:
            return bh()
        if self is LanguageEnum.BI:
            return bi()
        if self is LanguageEnum.BS:
            return bs()
        if self is LanguageEnum.BR:
            return br()
        if self is LanguageEnum.BG:
            return bg()
        if self is LanguageEnum.MY:
            return my()
        if self is LanguageEnum.CA:
            return ca()
        if self is LanguageEnum.CH:
            return ch()
        if self is LanguageEnum.CE:
            return ce()
        if self is LanguageEnum.ZH:
            return zh()
        if self is LanguageEnum.CU:
            return cu()
        if self is LanguageEnum.CV:
            return cv()
        if self is LanguageEnum.KW:
            return kw()
        if self is LanguageEnum.CO:
            return co()
        if self is LanguageEnum.CR:
            return cr()
        if self is LanguageEnum.CS:
            return cs()
        if self is LanguageEnum.DA:
            return da()
        if self is LanguageEnum.DV:
            return dv()
        if self is LanguageEnum.NL:
            return nl()
        if self is LanguageEnum.DZ:
            return dz()
        if self is LanguageEnum.EN:
            return en()
        if self is LanguageEnum.EO:
            return eo()
        if self is LanguageEnum.ET:
            return et()
        if self is LanguageEnum.EE:
            return ee()
        if self is LanguageEnum.FO:
            return fo()
        if self is LanguageEnum.FJ:
            return fj()
        if self is LanguageEnum.FI:
            return fi()
        if self is LanguageEnum.FR:
            return fr()
        if self is LanguageEnum.FY:
            return fy()
        if self is LanguageEnum.FF:
            return ff()
        if self is LanguageEnum.KA:
            return ka()
        if self is LanguageEnum.DE:
            return de()
        if self is LanguageEnum.GD:
            return gd()
        if self is LanguageEnum.GA:
            return ga()
        if self is LanguageEnum.GL:
            return gl()
        if self is LanguageEnum.GV:
            return gv()
        if self is LanguageEnum.EL:
            return el()
        if self is LanguageEnum.GN:
            return gn()
        if self is LanguageEnum.GU:
            return gu()
        if self is LanguageEnum.HT:
            return ht()
        if self is LanguageEnum.HA:
            return ha()
        if self is LanguageEnum.HE:
            return he()
        if self is LanguageEnum.HZ:
            return hz()
        if self is LanguageEnum.HI:
            return hi()
        if self is LanguageEnum.HO:
            return ho()
        if self is LanguageEnum.HR:
            return hr()
        if self is LanguageEnum.HU:
            return hu()
        if self is LanguageEnum.IG:
            return ig()
        if self is LanguageEnum.IS:
            return is_()
        if self is LanguageEnum.IO:
            return io()
        if self is LanguageEnum.II:
            return ii()
        if self is LanguageEnum.IU:
            return iu()
        if self is LanguageEnum.IE:
            return ie()
        if self is LanguageEnum.IA:
            return ia()
        if self is LanguageEnum.ID:
            return id()
        if self is LanguageEnum.IK:
            return ik()
        if self is LanguageEnum.IT:
            return it()
        if self is LanguageEnum.JV:
            return jv()
        if self is LanguageEnum.JA:
            return ja()
        if self is LanguageEnum.KL:
            return kl()
        if self is LanguageEnum.KN:
            return kn()
        if self is LanguageEnum.KS:
            return ks()
        if self is LanguageEnum.KR:
            return kr()
        if self is LanguageEnum.KK:
            return kk()
        if self is LanguageEnum.KM:
            return km()
        if self is LanguageEnum.KI:
            return ki()
        if self is LanguageEnum.RW:
            return rw()
        if self is LanguageEnum.KY:
            return ky()
        if self is LanguageEnum.KV:
            return kv()
        if self is LanguageEnum.KG:
            return kg()
        if self is LanguageEnum.KO:
            return ko()
        if self is LanguageEnum.KJ:
            return kj()
        if self is LanguageEnum.KU:
            return ku()
        if self is LanguageEnum.LO:
            return lo()
        if self is LanguageEnum.LA:
            return la()
        if self is LanguageEnum.LV:
            return lv()
        if self is LanguageEnum.LI:
            return li()
        if self is LanguageEnum.LN:
            return ln()
        if self is LanguageEnum.LT:
            return lt()
        if self is LanguageEnum.LB:
            return lb()
        if self is LanguageEnum.LU:
            return lu()
        if self is LanguageEnum.LG:
            return lg()
        if self is LanguageEnum.MK:
            return mk()
        if self is LanguageEnum.MH:
            return mh()
        if self is LanguageEnum.ML:
            return ml()
        if self is LanguageEnum.MI:
            return mi()
        if self is LanguageEnum.MR:
            return mr()
        if self is LanguageEnum.MS:
            return ms()
        if self is LanguageEnum.MG:
            return mg()
        if self is LanguageEnum.MT:
            return mt()
        if self is LanguageEnum.MN:
            return mn()
        if self is LanguageEnum.NA:
            return na()
        if self is LanguageEnum.NV:
            return nv()
        if self is LanguageEnum.NR:
            return nr()
        if self is LanguageEnum.ND:
            return nd()
        if self is LanguageEnum.NG:
            return ng()
        if self is LanguageEnum.NE:
            return ne()
        if self is LanguageEnum.NN:
            return nn()
        if self is LanguageEnum.NB:
            return nb()
        if self is LanguageEnum.NO:
            return no()
        if self is LanguageEnum.NY:
            return ny()
        if self is LanguageEnum.OC:
            return oc()
        if self is LanguageEnum.OJ:
            return oj()
        if self is LanguageEnum.OR:
            return or_()
        if self is LanguageEnum.OM:
            return om()
        if self is LanguageEnum.OS:
            return os()
        if self is LanguageEnum.PA:
            return pa()
        if self is LanguageEnum.FA:
            return fa()
        if self is LanguageEnum.PI:
            return pi()
        if self is LanguageEnum.PL:
            return pl()
        if self is LanguageEnum.PT:
            return pt()
        if self is LanguageEnum.PS:
            return ps()
        if self is LanguageEnum.QU:
            return qu()
        if self is LanguageEnum.RM:
            return rm()
        if self is LanguageEnum.RO:
            return ro()
        if self is LanguageEnum.RN:
            return rn()
        if self is LanguageEnum.RU:
            return ru()
        if self is LanguageEnum.SG:
            return sg()
        if self is LanguageEnum.SA:
            return sa()
        if self is LanguageEnum.SI:
            return si()
        if self is LanguageEnum.SK:
            return sk()
        if self is LanguageEnum.SL:
            return sl()
        if self is LanguageEnum.SE:
            return se()
        if self is LanguageEnum.SM:
            return sm()
        if self is LanguageEnum.SN:
            return sn()
        if self is LanguageEnum.SD:
            return sd()
        if self is LanguageEnum.SO:
            return so()
        if self is LanguageEnum.ST:
            return st()
        if self is LanguageEnum.ES:
            return es()
        if self is LanguageEnum.SC:
            return sc()
        if self is LanguageEnum.SR:
            return sr()
        if self is LanguageEnum.SS:
            return ss()
        if self is LanguageEnum.SU:
            return su()
        if self is LanguageEnum.SW:
            return sw()
        if self is LanguageEnum.SV:
            return sv()
        if self is LanguageEnum.TY:
            return ty()
        if self is LanguageEnum.TA:
            return ta()
        if self is LanguageEnum.TT:
            return tt()
        if self is LanguageEnum.TE:
            return te()
        if self is LanguageEnum.TG:
            return tg()
        if self is LanguageEnum.TL:
            return tl()
        if self is LanguageEnum.TH:
            return th()
        if self is LanguageEnum.BO:
            return bo()
        if self is LanguageEnum.TI:
            return ti()
        if self is LanguageEnum.TO:
            return to()
        if self is LanguageEnum.TN:
            return tn()
        if self is LanguageEnum.TS:
            return ts()
        if self is LanguageEnum.TK:
            return tk()
        if self is LanguageEnum.TR:
            return tr()
        if self is LanguageEnum.TW:
            return tw()
        if self is LanguageEnum.UG:
            return ug()
        if self is LanguageEnum.UK:
            return uk()
        if self is LanguageEnum.UR:
            return ur()
        if self is LanguageEnum.UZ:
            return uz()
        if self is LanguageEnum.VE:
            return ve()
        if self is LanguageEnum.VI:
            return vi()
        if self is LanguageEnum.VO:
            return vo()
        if self is LanguageEnum.CY:
            return cy()
        if self is LanguageEnum.WA:
            return wa()
        if self is LanguageEnum.WO:
            return wo()
        if self is LanguageEnum.XH:
            return xh()
        if self is LanguageEnum.YI:
            return yi()
        if self is LanguageEnum.YO:
            return yo()
        if self is LanguageEnum.ZA:
            return za()
        if self is LanguageEnum.ZU:
            return zu()
