# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SearchField(str, enum.Enum):
    NAME = "name"
    IDENTIFIER = "identifier"
    ADDRESS = "address"
    BUSINESS_PURPOSE = "business_purpose"
    DATE_OF_BIRTH = "date_of_birth"
    CONTACT = "contact"

    def visit(
        self,
        name: typing.Callable[[], T_Result],
        identifier: typing.Callable[[], T_Result],
        address: typing.Callable[[], T_Result],
        business_purpose: typing.Callable[[], T_Result],
        date_of_birth: typing.Callable[[], T_Result],
        contact: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SearchField.NAME:
            return name()
        if self is SearchField.IDENTIFIER:
            return identifier()
        if self is SearchField.ADDRESS:
            return address()
        if self is SearchField.BUSINESS_PURPOSE:
            return business_purpose()
        if self is SearchField.DATE_OF_BIRTH:
            return date_of_birth()
        if self is SearchField.CONTACT:
            return contact()
