# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ShipmentField(str, enum.Enum):
    BUYER_NAME = "buyer_name"
    SUPPLIER_NAME = "supplier_name"
    HS_DESCRIPTION = "hs_description"
    SUPPLIER_PURPOSE = "supplier_purpose"
    BUYER_PURPOSE = "buyer_purpose"

    def visit(
        self,
        buyer_name: typing.Callable[[], T_Result],
        supplier_name: typing.Callable[[], T_Result],
        hs_description: typing.Callable[[], T_Result],
        supplier_purpose: typing.Callable[[], T_Result],
        buyer_purpose: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ShipmentField.BUYER_NAME:
            return buyer_name()
        if self is ShipmentField.SUPPLIER_NAME:
            return supplier_name()
        if self is ShipmentField.HS_DESCRIPTION:
            return hs_description()
        if self is ShipmentField.SUPPLIER_PURPOSE:
            return supplier_purpose()
        if self is ShipmentField.BUYER_PURPOSE:
            return buyer_purpose()
