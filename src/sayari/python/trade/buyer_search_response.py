# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..base_types.paginated_response import PaginatedResponse
from ..core.datetime_utils import serialize_datetime
from .supplier_or_buyer_hits import SupplierOrBuyerHits


class BuyerSearchResponse(PaginatedResponse):
    """
    OK
    ---
    from sayari-analytics import (Aggregations, Bucket, BuyerSearchResponse,
                                  Country, Entities, Identifier,
                                  LatestShipmentDate, Relationships, SizeInfo,
                                  SourceCountInfo, Supplier, SupplierMetadata,
                                  SupplierOrBuyerHits, VolumeAggregates)

    BuyerSearchResponse(offset=0, limit=2, size=SizeInfo(count=5274, qualifier="eq", ), next=True, data=SupplierOrBuyerHits(hits=[Supplier(id="VRttegVx-TLCsNHKfNe1Cw", label='Товариство з обмеженою відповідальністю "ВЕСТ-СПРИНТ"', degree=909, entity_url="/v1/entity/VRttegVx-TLCsNHKfNe1Cw", pep=False, psa_count=0, sanctioned=False, closed=False, translated_label="VOLYN LIMITED LIABILITY COMPANY VOLYN INSTITUTE OF INFORMATION TECHNOLOGIES", company_type="АДВОКАТСЬКЕ БЮРО", registration_date="Registered 2021-02-02", type=Entities.COMPANY, identifiers=[Identifier(value="44102648", type="ukr_edrpou", label="Ukr Edrpou", ), Identifier(value="10019810200000131", type="ukr_reg_num", label="Ukr Reg Num", ), Identifier(value="43994030", type="ukr_edrpou", label="Ukr Edrpou", ), Identifier(value="43913941", type="ukr_edrpou", label="Ukr Edrpou", ), Identifier(value="44154434", type="ukr_edrpou", label="Ukr Edrpou", )], addresses=["Україна, 43020, Волинська обл., місто Луцьк, вул.Рівненська, будинок 48", "Україна, 43020, Волинська обл., місто Луцьк, вул.Рівненська, будинок 112А", "Україна, 43020, Волинська обл., місто Луцьк, вул.Електроапаратна, будинок 17"], countries=[Country.UKR], relationship_count={Relationships.RECEIVER_OF: 762, Relationships.HAS_BENEFICIAL_OWNER: 73, Relationships.HAS_OFFICER: 65, Relationships.HAS_SHAREHOLDER: 75, Relationships.HAS_FOUNDER: 78, Relationships.RECEIVES_FROM: 54, Relationships.HAS_LEGAL_REPRESENTATIVE: 4}, source_count={"96c06a5a03b61b91324c7e05b3114fb6": SourceCountInfo(count=762, label="Ukraine Imports & Exports (January 2023 - Present)", ), "d1bce737c158efddbef5048d63aaf124": SourceCountInfo(count=241, label="Ukraine Ministry of Justice Registry of Companies", )}, risk={}, metadata=SupplierMetadata(latest_shipment_date="2023-07-31", shipments=762, ), ), Supplier(id="pvg2oozEO4Z0igkTezE-tg", label="HA & COM BEBIDAS DEL MUNDO S.A.", degree=1768, entity_url="/v1/entity/pvg2oozEO4Z0igkTezE-tg", pep=False, psa_count=0, sanctioned=False, closed=False, type=Entities.COMPANY, identifiers=[Identifier(value="310100339533", type="cri_imp", label="Cri Imp", )], addresses=["Local 22"], countries=[Country.CRI], relationship_count={Relationships.RECEIVER_OF: 1685, Relationships.SHIPPER_OF: 83}, source_count={"2357c5dd6165c028180761babd0efc14": SourceCountInfo(count=1768, label="Costa Rica Imports & Exports (January 2022 - Present)", )}, risk={}, metadata=SupplierMetadata(latest_shipment_date="2023-08-30", shipments=584, ), )], aggregations=Aggregations(by_volume=[VolumeAggregates(key="VRttegVx-TLCsNHKfNe1Cw", doc_count=762, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=666, buckets=[Bucket(key="2023-07-31", doc_count=96, )], ), ), VolumeAggregates(key="pvg2oozEO4Z0igkTezE-tg", doc_count=584, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=572, buckets=[Bucket(key="2023-08-30", doc_count=12, )], ), ), VolumeAggregates(key="iVvGT-kDctG3lAMTi6VdIg", doc_count=431, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=459, buckets=[Bucket(key="2023-11-08", doc_count=3, )], ), ), VolumeAggregates(key="1UEnHGhgGF8bsXtKpObpMg", doc_count=404, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=403, buckets=[Bucket(key="2023-08-31", doc_count=1, )], ), )], entity_count=[], ), ), )
    """

    offset: int
    next: bool
    data: SupplierOrBuyerHits

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
