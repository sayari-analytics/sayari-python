# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..base_types.paginated_response import PaginatedResponse
from ..core.datetime_utils import serialize_datetime
from .supplier_or_buyer_hits import SupplierOrBuyerHits


class SupplierSearchResponse(PaginatedResponse):
    """
    OK
    ---
    from sayari-analytics import (Aggregations, Bucket, Country, Entities,
                                  Identifier, LatestShipmentDate, Relationships,
                                  Risk, RiskData, RiskLevel, SizeInfo,
                                  SourceCountInfo, Supplier, SupplierMetadata,
                                  SupplierOrBuyerHits, SupplierSearchResponse,
                                  VolumeAggregates)

    SupplierSearchResponse(offset=0, limit=2, size=SizeInfo(count=4784, qualifier="eq", ), next=True, data=SupplierOrBuyerHits(hits=[Supplier(id="qjbxjiT730MNsIWEoNJLoQ", label="SPAR WESTERN CAPE (PTY) LTD", degree=210236, entity_url="/v1/entity/qjbxjiT730MNsIWEoNJLoQ", pep=False, psa_count=0, sanctioned=False, closed=False, type=Entities.COMPANY, identifiers=[], addresses=[], countries=[], relationship_count={Relationships.SHIPPER_OF: 210159, Relationships.SHIPS_TO: 77}, source_count={"3456014d7aa3d82207e36f321980d49b": SourceCountInfo(count=210159, label="Namibia Imports & Exports (January 2023 - Present)", )}, risk={}, metadata=SupplierMetadata(latest_shipment_date="2023-09-30", shipments=1676, ), ), Supplier(id="AZZxdMc8RiVDIwd8-D4PAA", label="BODEGAS DE AMERICA S A", degree=1434, entity_url="/v1/entity/AZZxdMc8RiVDIwd8-D4PAA", pep=False, psa_count=0, sanctioned=False, closed=False, type=Entities.COMPANY, identifiers=[Identifier(value="35474-45-260175", type="pan_importer_exporter_id", label="Pan Importer Exporter Id", )], addresses=["PANAMA, PANAMA", "VIA TOCUMEN LA PULIDA PANAMA, REP. DE PA", "CL A, URB. INDL JUAN DIAS ,PANAMA ,507 377-5097"], countries=[Country.PAN, Country.ECU, Country.DEU, Country.USA], relationship_count={Relationships.SHIPS_TO: 93, Relationships.RECEIVES_FROM: 9, Relationships.RECEIVER_OF: 14, Relationships.SHIPPER_OF: 1320, Relationships.NOTIFY_PARTY_OF: 4}, source_count={"a6a639808cdad385ab27296aa6d98b98": SourceCountInfo(count=8, label="Netherlands Imports & Exports (April 2023 - Present)", ), "ee100f9b5dfdae8991ba43f5de6e1854": SourceCountInfo(count=1124, label="Panama Imports & Exports (January 2022 - Present)", ), "e27afa7f0d06d3ceac903a03143950bd": SourceCountInfo(count=9, label="Germany Imports & Exports (April 2023 - Present)", ), "c7c2684a1a28cce25025c6b7c6a97bf1": SourceCountInfo(count=21, label="Colombia Imports & Exports (2008-2020)", ), "8c2d4a6066d8339262d07be859061d8a": SourceCountInfo(count=4, label="UK Imports & Exports (March 2023)", ), "d302aa0d7153d87aeaa4406f9a3b28fa": SourceCountInfo(count=28, label="Colombia Imports & Exports (January 2022 - Present)", ), "04eae776f662e518c977d5df3598ae69": SourceCountInfo(count=4, label="Italy Imports & Exports (April 2023 - Present)", ), "4a34a8375e7041cf8661fa82366c60ea": SourceCountInfo(count=130, label="Ecuador Imports & Exports (January 2022 - Present)", ), "ce462e9deea545cce35df38c48512a0c": SourceCountInfo(count=2, label="India Imports & Exports (January 2023 - Present)", ), "8de630b7a702183da138321ae0f1c4b0": SourceCountInfo(count=1, label="China Imports & Exports (2022 - Present)", ), "aebcb2f2fe410ec1664d6b904e9a8a37": SourceCountInfo(count=2, label="France Imports & Exports (April 2023 - Present)", ), "5547652362cfeeb62963e058f95d6fdd": SourceCountInfo(count=4, label="Peru Imports & Exports (January 2023 - Present)", ), "31df3cc3a57cc4a39dcc29dd4b9ce5e5": SourceCountInfo(count=2, label="Mexico Imports & Exports (January 2022 - Present)", ), "16a4cc2d0f467fa993b28587d542a25d": SourceCountInfo(count=26, label="USA Imports (2021 - Present)", )}, risk={Risk.EU_HIGH_RISK_THIRD: RiskData(value=true, metadata={"country": ["PAN"]}, level=RiskLevel.RELEVANT, ), Risk.FORCED_LABOR_XINJIANG_ORIGIN_SUBTIER: RiskData(value=2, metadata={}, level=RiskLevel.HIGH, ), Risk.BASEL_AML: RiskData(value=5.93, metadata={"country": ["PAN"]}, level=RiskLevel.RELEVANT, ), Risk.CPI_SCORE: RiskData(value=36, metadata={"country": ["ECU"]}, level=RiskLevel.RELEVANT, )}, metadata=SupplierMetadata(latest_shipment_date="2023-10-05", shipments=987, ), )], aggregations=Aggregations(by_volume=[VolumeAggregates(key="qjbxjiT730MNsIWEoNJLoQ", doc_count=1676, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=1673, buckets=[Bucket(key="2023-09-30", doc_count=3, )], ), ), VolumeAggregates(key="AZZxdMc8RiVDIwd8-D4PAA", doc_count=987, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=997, buckets=[Bucket(key="2023-10-05", doc_count=1, )], ), ), VolumeAggregates(key="D8JScO4dhYzI6bWHS_Uo6A", doc_count=820, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=273, buckets=[Bucket(key="2023-11-11", doc_count=1, )], ), ), VolumeAggregates(key="d0wdOfdAZxZjY8pJCrrDNQ", doc_count=698, latest_shipment_date=LatestShipmentDate(doc_count_error_upper_bound=0, sum_other_doc_count=690, buckets=[Bucket(key="2023-09-30", doc_count=8, )], ), )], entity_count=[], ), ), )
    """

    offset: int
    next: bool
    data: SupplierOrBuyerHits

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
