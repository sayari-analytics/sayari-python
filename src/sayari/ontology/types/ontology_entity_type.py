# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...generated_types.types.entities import Entities
import typing
from ...generated_types.types.attributes import Attributes
from ...generated_types.types.relationships import Relationships
from .ontology_entity_type_field import OntologyEntityTypeField
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class OntologyEntityType(UniversalBaseModel):
    id: Entities
    label: str
    comment: str
    attribute: typing.List[Attributes]
    relationship: typing.List[Relationships]
    field: typing.List[OntologyEntityTypeField]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
