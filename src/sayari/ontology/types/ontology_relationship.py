# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from ...generated_types.types.relationships import Relationships
import typing
from .ontology_relationship_between import OntologyRelationshipBetween
from ...generated_types.types.attributes import Attributes
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class OntologyRelationship(UniversalBaseModel):
    id: Relationships
    label: str
    description: str
    comment: str
    type: str
    inverse: Relationships
    between: typing.List[OntologyRelationshipBetween]
    attributes: typing.List[Attributes]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
