# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .ontology_base_filters import OntologyBaseFilters
import typing
from .ontology_source_type import OntologySourceType
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetOntologySourceTypesResponse(UniversalBaseModel):
    """
    Examples
    --------
    from sayari.ontology import (
        GetOntologySourceTypesResponse,
        OntologyBaseFilters,
        OntologySourceType,
    )

    GetOntologySourceTypesResponse(
        filters=OntologyBaseFilters(
            id=["adverse_media_/_negative_news_data"],
        ),
        data=[
            OntologySourceType(
                id="adverse_media_/_negative_news_data",
                label="Adverse Media / Negative News Data",
            )
        ],
        total_count=1,
    )
    """

    filters: OntologyBaseFilters
    data: typing.List[OntologySourceType]
    total_count: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
