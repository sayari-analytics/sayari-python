# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .ontology_entity_types_filters import OntologyEntityTypesFilters
import typing
from .ontology_entity_type import OntologyEntityType
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetOntologyEntityTypesResponse(UniversalBaseModel):
    """
    Examples
    --------
    from sayari.ontology import (
        GetOntologyEntityTypesResponse,
        OntologyEntityType,
        OntologyEntityTypesFilters,
    )

    GetOntologyEntityTypesResponse(
        filters=OntologyEntityTypesFilters(
            id=["aircraft"],
        ),
        data=[
            OntologyEntityType(
                id="aircraft",
                label="Aircraft",
                comment="An airplane, helicopter, or other vehicle that travels by flight",
                attribute=[
                    "additional_information",
                    "address",
                    "country",
                    "identifier",
                    "measurement",
                    "monetary_value",
                    "name",
                    "risk_intelligence",
                    "weak_identifier",
                ],
                relationship=[
                    "generic",
                    "has_owner",
                    "linked_to",
                    "possibly_same_as",
                ],
                field=[
                    "additional_information",
                    "address",
                    "country",
                    "generic",
                    "has_owner",
                    "identifier",
                    "linked_to",
                    "measurement",
                    "monetary_value",
                    "name",
                    "possibly_same_as",
                    "risk_intelligence",
                    "weak_identifier",
                ],
            )
        ],
        total_count=1234,
    )
    """

    filters: OntologyEntityTypesFilters
    data: typing.List[OntologyEntityType]
    total_count: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
