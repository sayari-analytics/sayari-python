# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .project import Project


class CreateProjectResponse(pydantic_v1.BaseModel):
    """
    Examples
    --------
    from sayari import CreateProjectResponse, Project, ProjectCounts

    CreateProjectResponse(
        data=Project(
            id="YVMBRg",
            label="Project Alpha",
            archived=False,
            created="2024-03-15 20:31:06.08855+00",
            updated="2024-03-15 20:31:06.08855+00",
            counts=ProjectCounts(
                entity=0,
                graph=0,
                record=0,
                search=0,
            ),
        ),
    )
    """

    data: Project

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
