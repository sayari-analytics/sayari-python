# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...generated_types.types.country import Country
import pydantic
from ...generated_types.types.entities import Entities
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ResolutionResponseFields(UniversalBaseModel):
    name: typing.Optional[typing.List[str]] = None
    identifier: typing.Optional[typing.List[str]] = None
    profile: typing.Optional[str] = None
    country: typing.Optional[typing.List[Country]] = pydantic.Field(default=None)
    """
    Entity country - must be ISO (3166) Trigram i.e., USA. See complete list [here](/sayari-library/ontology/enumerated-types#country)
    """

    address: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    List of physical addresses associated with the entity.
    """

    date_of_birth: typing.Optional[typing.List[str]] = None
    contact: typing.Optional[typing.List[str]] = None
    type: typing.Optional[typing.List[Entities]] = pydantic.Field(default=None)
    """
    [Entity type](/sayari-library/ontology/entities)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
